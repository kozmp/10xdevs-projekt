---
import Layout from "../layouts/Layout.astro";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Card } from "@/components/ui/card";

// Sprawdź czy użytkownik jest już zalogowany
const { cookies, redirect } = Astro;
const accessToken = cookies.get("sb-access-token");
if (accessToken) {
  return redirect("/");
}
---

<Layout title="Reset Password - AI Product Description Generator">
  <main class="container mx-auto min-h-screen flex items-center justify-center p-6">
    <Card className="w-full max-w-md p-8">
      <div class="space-y-6">
        <div class="space-y-2 text-center">
          <h1 class="text-2xl font-bold">Reset Password</h1>
          <p class="text-muted-foreground">Enter your email to reset your password</p>
        </div>

        <form id="forgot-password-form" class="space-y-4">
          <div class="space-y-2">
            <Label htmlFor="email">Email</Label>
            <Input
              id="email"
              name="email"
              type="email"
              autoComplete="email"
              required
              placeholder="your@email.com"
            />
          </div>

          <div id="error-message" class="text-destructive text-sm hidden"></div>
          <div id="success-message" class="text-green-600 text-sm hidden"></div>

          <Button type="submit" className="w-full">Send Reset Link</Button>
        </form>

        <div class="text-center text-sm">
          <span class="text-muted-foreground">Remember your password?</span>
          <a href="/login" class="text-primary hover:underline">Sign in</a>
        </div>
      </div>
    </Card>
  </main>
</Layout>

<script>
  const form = document.getElementById("forgot-password-form") as HTMLFormElement;
  const errorMessage = document.getElementById("error-message");
  const successMessage = document.getElementById("success-message");

  form?.addEventListener("submit", async (e) => {
    e.preventDefault();

    if (!errorMessage || !successMessage) return;
    errorMessage.classList.add("hidden");
    successMessage.classList.add("hidden");

    const formData = new FormData(form);

    try {
      const response = await fetch("/api/auth/forgot-password", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          email: formData.get("email"),
        }),
      });

      const data = await response.json();

      if (!response.ok) {
        throw new Error(data.error || "Failed to send reset link");
      }

      // Zawsze pokazujemy sukces (nawet jeśli email nie istnieje - bezpieczeństwo)
      successMessage.textContent = "If an account exists with that email, you will receive a password reset link.";
      successMessage.classList.remove("hidden");
      form.reset();
    } catch (err) {
      errorMessage.textContent = err instanceof Error ? err.message : "An error occurred";
      errorMessage.classList.remove("hidden");
    }
  });
</script>
